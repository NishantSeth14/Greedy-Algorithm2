class Solution {
public:

    void getPlaindrome(int i, int j, string&s,int&max_length, int&st, int&end){
        int n = s.length();
        while(i >= 0 && j < n){
            if(s[i] == s[j]){
                i--;
                j++;
            }
            else{
                break;
            }   
        }
        int len = j-i-1;
        if(max_length < len){
            max_length = len;
            st = i+1;
            end = j-1;
        }
    }

    string longestPalindrome(string s) {
        int n = s.size();
        int st = 0;
        int end = 0;
        int max_length = 1;
        //odd palindrome
        for(int i=0; i<n; i++){
            getPlaindrome(i,i,s,max_length,st,end);
        }
        //even palindrome
        for(int i=0; i<n; i++){
            getPlaindrome(i,i+1,s,max_length,st,end);
        }
        return s.substr(st,max_length);
    }
};
